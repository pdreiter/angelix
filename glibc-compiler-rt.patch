diff -ru compiler-rt-3.4/lib/asan/asan_linux.cc llvm-3.7.0.src/projects/compiler-rt/lib/asan/asan_linux.cc
--- compiler-rt-3.4/lib/asan/asan_linux.cc	2013-12-15 19:36:46.000000000 -0700
+++ llvm-3.7.0.src/projects/compiler-rt/lib/asan/asan_linux.cc	2021-10-28 09:49:59.083044415 -0700
@@ -28,6 +28,7 @@
 #include <sys/types.h>
 #include <fcntl.h>
 #include <pthread.h>
+#include <signal.h>
 #include <stdio.h>
 #include <unistd.h>
 #include <unwind.h>
diff -ru compiler-rt-3.4/lib/sanitizer_common/sanitizer_linux.cc llvm-3.7.0.src/projects/compiler-rt/lib/sanitizer_common/sanitizer_linux.cc
--- compiler-rt-3.4/lib/sanitizer_common/sanitizer_linux.cc	2013-11-06 10:47:39.000000000 -0700
+++ llvm-3.7.0.src/projects/compiler-rt/lib/sanitizer_common/sanitizer_linux.cc	2021-10-28 10:03:56.968386806 -0700
@@ -601,8 +601,9 @@
   return internal_syscall(__NR_prctl, option, arg2, arg3, arg4, arg5);
 }
 
-uptr internal_sigaltstack(const struct sigaltstack *ss,
-                         struct sigaltstack *oss) {
+uptr internal_sigaltstack(const void*ss, void* oss) {
+//uptr internal_sigaltstack(const struct sigaltstack *ss,
+//                         struct sigaltstack *oss) {
   return internal_syscall(__NR_sigaltstack, (uptr)ss, (uptr)oss);
 }
 
diff -ru compiler-rt-3.4/lib/sanitizer_common/sanitizer_linux.h llvm-3.7.0.src/projects/compiler-rt/lib/sanitizer_common/sanitizer_linux.h
--- compiler-rt-3.4/lib/sanitizer_common/sanitizer_linux.h	2013-10-15 07:12:26.000000000 -0700
+++ llvm-3.7.0.src/projects/compiler-rt/lib/sanitizer_common/sanitizer_linux.h	2021-10-28 10:04:38.800849980 -0700
@@ -20,7 +20,7 @@
 #include "sanitizer_platform_limits_posix.h"
 
 struct link_map;  // Opaque type returned by dlopen().
-struct sigaltstack;
+//struct sigaltstack;
 
 namespace __sanitizer {
 // Dirent structure for getdents(). Note that this structure is different from
@@ -30,8 +30,9 @@
 // Syscall wrappers.
 uptr internal_getdents(fd_t fd, struct linux_dirent *dirp, unsigned int count);
 uptr internal_prctl(int option, uptr arg2, uptr arg3, uptr arg4, uptr arg5);
-uptr internal_sigaltstack(const struct sigaltstack* ss,
-                          struct sigaltstack* oss);
+uptr internal_sigaltstack(const void* ss, void *oss);
+//uptr internal_sigaltstack(const struct sigaltstack* ss,
+//                          struct sigaltstack* oss);
 uptr internal_sigaction(int signum, const __sanitizer_kernel_sigaction_t *act,
     __sanitizer_kernel_sigaction_t *oldact);
 uptr internal_sigprocmask(int how, __sanitizer_kernel_sigset_t *set,
diff -ru compiler-rt-3.4/lib/sanitizer_common/sanitizer_platform_limits_posix.cc llvm-3.7.0.src/projects/compiler-rt/lib/sanitizer_common/sanitizer_platform_limits_posix.cc
--- compiler-rt-3.4/lib/sanitizer_common/sanitizer_platform_limits_posix.cc	2013-12-15 13:56:43.000000000 -0700
+++ llvm-3.7.0.src/projects/compiler-rt/lib/sanitizer_common/sanitizer_platform_limits_posix.cc	2021-10-28 09:58:34.440776925 -0700
@@ -83,7 +83,7 @@
 #include <sys/statvfs.h>
 #include <sys/timex.h>
 #include <sys/user.h>
-#include <sys/ustat.h>
+//#include <sys/ustat.h>
 #include <linux/cyclades.h>
 #include <linux/if_eql.h>
 #include <linux/if_plip.h>
@@ -165,7 +165,21 @@
   unsigned struct_old_utsname_sz = sizeof(struct old_utsname);
   unsigned struct_oldold_utsname_sz = sizeof(struct oldold_utsname);
   unsigned struct_itimerspec_sz = sizeof(struct itimerspec);
-  unsigned struct_ustat_sz = sizeof(struct ustat);
+  //unsigned struct_ustat_sz = sizeof(struct ustat);
+  // Use pre-computed size of struct ustat to avoid <sys/ustat.h> which
+  // has been removed from glibc 2.28.
+#if defined(__aarch64__) || defined(__s390x__) || defined (__mips64) \
+  || defined(__powerpc64__) || defined(__arch64__) || defined(__sparcv9) \
+  || defined(__x86_64__)
+#define SIZEOF_STRUCT_USTAT 32
+#elif defined(__arm__) || defined(__i386__) || defined(__mips__) \
+  || defined(__powerpc__) || defined(__s390__)
+#define SIZEOF_STRUCT_USTAT 20
+#else
+#error Unknown size of struct ustat
+#endif
+  unsigned struct_ustat_sz = SIZEOF_STRUCT_USTAT;
+
 #endif // SANITIZER_LINUX
 
 #if SANITIZER_LINUX && !SANITIZER_ANDROID
diff -ru compiler-rt-3.4/lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc llvm-3.7.0.src/projects/compiler-rt/lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc
--- compiler-rt-3.4/lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	2013-10-15 08:35:56.000000000 -0700
+++ llvm-3.7.0.src/projects/compiler-rt/lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc	2021-10-28 10:03:08.443848363 -0700
@@ -240,7 +240,8 @@
 
   // Alternate stack for signal handling.
   InternalScopedBuffer<char> handler_stack_memory(kHandlerStackSize);
-  struct sigaltstack handler_stack;
+  //struct sigaltstack handler_stack;
+  stack_t handler_stack;
   internal_memset(&handler_stack, 0, sizeof(handler_stack));
   handler_stack.ss_sp = handler_stack_memory.data();
   handler_stack.ss_size = kHandlerStackSize;
diff -ru compiler-rt-3.4/lib/tsan/rtl/tsan_platform_linux.cc llvm-3.7.0.src/projects/compiler-rt/lib/tsan/rtl/tsan_platform_linux.cc
--- compiler-rt-3.4/lib/tsan/rtl/tsan_platform_linux.cc	2013-10-15 06:03:06.000000000 -0700
+++ llvm-3.7.0.src/projects/compiler-rt/lib/tsan/rtl/tsan_platform_linux.cc	2021-10-28 10:05:58.377728686 -0700
@@ -349,7 +349,8 @@
 #ifndef TSAN_GO
 int ExtractResolvFDs(void *state, int *fds, int nfd) {
   int cnt = 0;
-  __res_state *statp = (__res_state*)state;
+  //__res_state *statp = (__res_state*)state;
+  struct __res_state *statp = (struct __res_state*)state;
   for (int i = 0; i < MAXNS && cnt < nfd; i++) {
     if (statp->_u._ext.nsaddrs[i] && statp->_u._ext.nssocks[i] != -1)
       fds[cnt++] = statp->_u._ext.nssocks[i];
